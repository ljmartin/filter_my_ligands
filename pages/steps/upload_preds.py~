"""Home page shown when the user enters the application"""
import streamlit as st
import pandas as pd

from rdkit import Chem
from rdkit.Chem import Draw
from IPython.display import SVG

def write(sesh=None):
    """Used to write the page in the app.py file"""
    with st.spinner("Loading About ..."):

        st.markdown(
            """## Upload data file
Here you can upload two CSV files. The first corresponds to the molecules 
predicted from docking:
""",
            unsafe_allow_html=True,
        )

    st.set_option('deprecation.showfileUploaderEncoding', False)

#    if st.button('load test file'):
#        sesh.df = pd.read_csv('https://raw.githubusercontent.com/ljmartin/filter_my_ligands/master/docking_sample.csv')
#        st.write(sesh.df)
#        sesh.df['mols'] = [Chem.MolFromSmiles(i) for i in sesh.df['smiles']]
#        st.write('made mols ✅')
    
    uploaded_file = st.file_uploader("Choose a CSV file with predicted SMILES", type="csv")
    if uploaded_file is not None:
        uploaded_data = pd.read_csv(uploaded_file)
        st.write('✅ uploaded Known mols csv, head:')
        st.write(uploaded_data.head())
        sesh.df = uploaded_data


    known_file = st.file_uploader("Choose a CSV file with known SMILES", type="csv")
    if known_file is not None:
        known_data = pd.read_csv(known_file)
        st.write('✅, uploaded Predicted mols csv, head:')
        st.write(known_data.head())
        sesh.df2 = known_data

    if sesh.df is not None and sesh.df2 is not None:
        if st.button('Turn into rdkit molecules'):
            sesh.df['mols'] = [Chem.MolFromSmiles(i) for i in sesh.df['smiles']]
            st.write('✅ made mols, first ten:')
            mols = [i for i in sesh.df['mols']]
            img = Draw.MolsToGridImage(mols[:10], molsPerRow=5,)
#            f = open('img.svg', 'w')
#            f.write(img)
#            f.close()
            st.image(img)
            #st.image( Draw.MolsToGridImage(mols[:10], molsPerRow=5, useSVG=True ) )
